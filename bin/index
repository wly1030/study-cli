#! /usr/bin/env node
const chalk = require("chalk")
const figlet = require("figlet")
const program = require("commander")
// 解析用户执行时输入的参数

program
  .command("create <project-name>") // 增加创建指令
  .description("create a new project") // 添加描述信息
  .option("-f, --force", "overwrite target directory if it exists") // 强制覆盖
  .action((projectName, cmd) => {
    // 处理用户输入create 指令附加的参数
    require("../lib/create.js")(projectName, cmd)
  });
program
  .command("config [value]") // config 命令
  .description("inspect and modify the config")
  .option("-g, --get <key>", "get value by key")
  .option("-s, --set <key> <value>", "set option[key] is value")
  .option("-d, --delete <key>", "delete option by key")
  .action((value, keys) => {
    // value 可以取到 [value] 值，keys会获取到命令参数
    console.log(value, keys);
  });

program.on("--help", () => {// 监听 --help 指令
  console.log( figlet.textSync("wly-cli", { width: 60}))
  // 前后两个空行调整格式，更舒适
  console.log();
  console.log(` Run ${chalk.blue("myCli <command> --help")} for detailed usage of given command`)
  console.log();
})

program
  .name("study-cli")
  .usage(`<command> [option]`)
  .version(`study-cli ${require("../package.json").version}`)
  .parse(process.argv)

